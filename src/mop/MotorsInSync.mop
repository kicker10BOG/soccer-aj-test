package mop;

import java.io.*;
import java.util.*;
import notmop.SoccerMotorMotion;

MotorsInSync(SoccerMotorMotion motors) {
	float prevLeftMotorPos = 0;
	float prevRightMotorPos = 0;
	
	event testEvent after() :
			call(float[] SoccerMotorMotion.goForward(int)) {
				System.out.println("testing");
			}
	
	// Get the staring positions of the motors
/*	event checkMotorsBefore before(SoccerMotorMotion motors) : 
		call(float[] SoccerMotorMotion.goForward(int))
			&& this(motors) {
				System.out.println("go* starting!");
				this.prevLeftMotorPos = motors.getLeftMotorPos();
				this.prevRightMotorPos = motors.getRightMotorPos();
			}
			
	// compare positions after moving
	event motorsInSync after(SoccerMotorMotion motors) 
		returning(float[] vals) : 
			call(* SoccerMotorMotion.go*(*))
			&& target(motors) 
			&& condition(Math.abs(
						Math.abs(vals[0] - this.prevLeftMotorPos) 
						- Math.abs(vals[1] - this.prevRightMotorPos)) 
						< motors.getSyncThresh()) {
					System.out.println("go* ending!");
				}
	
	event go after(SoccerMotorMotion motors) : 
			call(* SoccerMotorMotion.go*(*))
			&& target(motors) {}
*/	
	ltl: testEvent
	
	@violation {
		System.out.println("motors out of sync");
	}
}